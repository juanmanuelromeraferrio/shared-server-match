{
	"id": "8942fde3-2652-ab9d-b2c6-68097d63f74b",
	"name": "sharedServerMatch",
	"timestamp": 1461518720405,
	"collection_id": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"count": 1,
	"delay": 0,
	"collection": {
		"id": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
		"name": "sharedServerMatch",
		"description": "",
		"order": [
			"2838e53b-b805-3659-64db-bbe3dd6e3eba",
			"b0755d06-5510-e8b9-6af1-25e66f850c49",
			"53d4fd33-7e83-8e9c-5dc4-18da3bf7ca8e",
			"c59e8b94-27b2-b0a8-c395-741c46ed2fb4",
			"35300df5-1fe9-8323-b0ee-13481bf6cc21",
			"b68a2ef1-e6a3-f0c9-81af-f912bc7c55e6",
			"5183021c-4561-7e79-1e86-64aa2c94952d",
			"7ba08531-0ea2-d593-9ea5-f5dd61bfa2f6",
			"d7d7a796-f882-a83f-11aa-672d8f318aaa",
			"58dae3c3-2e9c-857f-9206-204208b7dcec",
			"caf5ff48-8625-b055-b6fc-a6b48755389e",
			"f1589285-ff1a-1c11-cf91-62482d3143e5",
			"9cd2b516-589c-2a96-f980-0600cece5a6b",
			"a39105ba-2119-c4ab-2679-b1d849c16a0f",
			"e56886f4-fb7f-46d5-ddc7-af516e790cfb",
			"6fc0fa3e-aa1d-4dc1-9e9d-695d209ce8ff",
			"ca034683-4235-279c-2fcb-bad3b58f31cb",
			"48a27ced-4812-f5de-3809-d3e9531a98cd",
			"87a2aa43-9a38-70fd-7309-dab2150fd1f7"
		],
		"folders": [],
		"timestamp": 1459630678107,
		"synced": false,
		"remote_id": 586880,
		"owner": "388677",
		"sharedWithTeam": false,
		"subscribed": false,
		"remoteLink": "https://www.getpostman.com/collections/8ab47c7de3f83b2298e2",
		"public": false,
		"createdAt": 1459630678107,
		"updatedAt": 1461517199999,
		"write": true,
		"requests": [
			{
				"id": "2838e53b-b805-3659-64db-bbe3dd6e3eba",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music/band\",\"value\": \"radiohead\"}, \n                  {\"category\": \"music/band\",\"value\": \"pearl jam\"},\n                  {\"category\": \"outdoors\",\"value\": \"running\"}\n                  ]\n}",
				"dataMode": "raw",
				"name": "getting users",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516476740,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "35300df5-1fe9-8323-b0ee-13481bf6cc21",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "POST",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\"user\":\n {\n    \"nombre\": \"Juan Manuel Romera\",\n    \"alias\": \"juanm\",\n    \"email\": \"juanmo@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Los Piojos\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"name": "post user bad request",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516633323,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "48a27ced-4812-f5de-3809-d3e9531a98cd",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/120/photo",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "PUT",
				"data": "{\r\n \"photo\": \"base_64\"\r\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518658901,
				"name": "update photo not existing user",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "5183021c-4561-7e79-1e86-64aa2c94952d",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "PUT",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Arctic Monkeys\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"name": "update existing user",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516752378,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "53d4fd33-7e83-8e9c-5dc4-18da3bf7ca8e",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/100",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "GET",
				"data": "{\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music/band\",\"value\": \"radiohead\"}, \n                  {\"category\": \"music/band\",\"value\": \"pearl jam\"},\n                  {\"category\": \"outdoors\",\"value\": \"running\"}\n                  ]\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518569855,
				"name": "getting not existing user",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "58dae3c3-2e9c-857f-9206-204208b7dcec",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/100",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "PUT",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Arctic Monkeys\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518603166,
				"name": "update not existing user",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "6fc0fa3e-aa1d-4dc1-9e9d-695d209ce8ff",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/interests",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\r\n    \"interest\": {\r\n        \"category\": \"music / band\",\r\n        \"value\": \"Rolling Stones\"\r\n        }\r\n}",
				"dataMode": "raw",
				"name": "getting interests",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461517113673,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "7ba08531-0ea2-d593-9ea5-f5dd61bfa2f6",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "PUT",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music/band\",\"value\": \"radiohead\"}, \n                  {\"category\": \"music/band\",\"value\": \"pearl jam\"},\n                  {\"category\": \"outdoors\",\"value\": \"running\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518586142,
				"name": "update existing user interest not found",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "87a2aa43-9a38-70fd-7309-dab2150fd1f7",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1/photo",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "PUT",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\r\n \"photosss\": \"base_64\"\r\n}",
				"dataMode": "raw",
				"name": "update photo bad request",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461517192999,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "9cd2b516-589c-2a96-f980-0600cece5a6b",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/interests",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "POST",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\r\n    \"interest\": {\r\n        \"category\": \"music / band\",\r\n        \"value\": \"Foo Figthers\"\r\n        }\r\n}",
				"dataMode": "raw",
				"name": "post not existing interest",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461517031009,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "a39105ba-2119-c4ab-2679-b1d849c16a0f",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/interests",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "POST",
				"data": "{\r\n    \"interest\": {\r\n        \"category\": \"music / band\",\r\n        \"value\": \"Arctic Monkeys\"\r\n        }\r\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518634860,
				"name": "post existing interest",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "b0755d06-5510-e8b9-6af1-25e66f850c49",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"email\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music/band\",\"value\": \"radiohead\"}, \n                  {\"category\": \"music/band\",\"value\": \"pearl jam\"},\n                  {\"category\": \"outdoors\",\"value\": \"running\"}\n                  ]\n}",
				"dataMode": "raw",
				"name": "getting existing user",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516514404,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "b68a2ef1-e6a3-f0c9-81af-f912bc7c55e6",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "POST",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel Romera\",\n    \"alias\": \"juanm\",\n    \"email\": \"juanmo@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Gilda\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518579583,
				"name": "post user interest not found",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			},
			{
				"id": "c59e8b94-27b2-b0a8-c395-741c46ed2fb4",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "POST",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel Romera\",\n    \"alias\": \"juanm\",\n    \"email\": \"juanmo@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Los Piojos\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"name": "post user ok",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516601826,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "ca034683-4235-279c-2fcb-bad3b58f31cb",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1/photo",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "PUT",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\r\n \"photo\": \"base_64\"\r\n}",
				"dataMode": "raw",
				"name": "update photo existing user",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461517138624,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "caf5ff48-8625-b055-b6fc-a6b48755389e",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/11",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "DELETE",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": [],
				"dataMode": "params",
				"name": "delete existing user",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516963160,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "d7d7a796-f882-a83f-11aa-672d8f318aaa",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/1",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "PUT",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\"user\":\n {\n    \"name\": \"Juan Manuel R.\",\n    \"alias\": \"kumaaa\",\n    \"emailaa\": \"usuario@usuario.com\",\n    \"interests\": [{\"category\": \"music / band\",\"value\": \"Arctic Monkeys\"}\n                  ],\n    \"location\":{\n        \"latitude\":\"-121.45356\",\n        \"longitude\":\"46.51119\"\n    }\n }\n}",
				"dataMode": "raw",
				"name": "update existing user bad request",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461516848690,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "e56886f4-fb7f-46d5-ddc7-af516e790cfb",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/interests",
				"pathVariables": {},
				"preRequestScript": null,
				"method": "POST",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"data": "{\r\n    \"interest\": {\r\n        \"category\": \"music / band\",\r\n        \"valor\": \"Arctic Monkeys\"\r\n        }\r\n}",
				"dataMode": "raw",
				"name": "post interest bad request",
				"description": "",
				"descriptionFormat": "html",
				"time": 1461517092088,
				"version": 2,
				"responses": [],
				"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;",
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "f1589285-ff1a-1c11-cf91-62482d3143e5",
				"headers": "Content-Type: application/json\n",
				"url": "http://localhost:5000/users/120",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "DELETE",
				"data": [],
				"dataMode": "params",
				"version": 2,
				"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1461518611382,
				"name": "delete not existing user",
				"description": "",
				"collectionId": "9e57f2aa-bb45-b568-de48-807ac4cc4da4",
				"responses": []
			}
		],
		"syncedFilename": "",
		"isDeleted": false
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"data": [],
	"allTests": [],
	"results": [
		{
			"id": "2838e53b-b805-3659-64db-bbe3dd6e3eba",
			"name": "getting users",
			"url": "http://localhost:5000/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				141
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 141,
			"totalRequestTime": 141,
			"iterationResults": {}
		},
		{
			"id": "b0755d06-5510-e8b9-6af1-25e66f850c49",
			"name": "getting existing user",
			"url": "http://localhost:5000/users/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 21,
			"totalRequestTime": 21,
			"iterationResults": {}
		},
		{
			"id": "53d4fd33-7e83-8e9c-5dc4-18da3bf7ca8e",
			"name": "getting not existing user",
			"url": "http://localhost:5000/users/100",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 12,
			"totalRequestTime": 12,
			"iterationResults": {}
		},
		{
			"id": "c59e8b94-27b2-b0a8-c395-741c46ed2fb4",
			"name": "post user ok",
			"url": "http://localhost:5000/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				75
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 75,
			"totalRequestTime": 75,
			"iterationResults": {}
		},
		{
			"id": "35300df5-1fe9-8323-b0ee-13481bf6cc21",
			"name": "post user bad request",
			"url": "http://localhost:5000/users",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 400": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Status code is 400": true
				}
			],
			"time": 11,
			"totalRequestTime": 11,
			"iterationResults": {}
		},
		{
			"id": "b68a2ef1-e6a3-f0c9-81af-f912bc7c55e6",
			"name": "post user interest not found",
			"url": "http://localhost:5000/users",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "5183021c-4561-7e79-1e86-64aa2c94952d",
			"name": "update existing user",
			"url": "http://localhost:5000/users/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 20,
			"totalRequestTime": 20,
			"iterationResults": {}
		},
		{
			"id": "7ba08531-0ea2-d593-9ea5-f5dd61bfa2f6",
			"name": "update existing user interest not found",
			"url": "http://localhost:5000/users/1",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 25,
			"totalRequestTime": 25,
			"iterationResults": {}
		},
		{
			"id": "d7d7a796-f882-a83f-11aa-672d8f318aaa",
			"name": "update existing user bad request",
			"url": "http://localhost:5000/users/1",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 400": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Status code is 400": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "58dae3c3-2e9c-857f-9206-204208b7dcec",
			"name": "update not existing user",
			"url": "http://localhost:5000/users/100",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 17,
			"totalRequestTime": 17,
			"iterationResults": {}
		},
		{
			"id": "caf5ff48-8625-b055-b6fc-a6b48755389e",
			"name": "delete existing user",
			"url": "http://localhost:5000/users/11",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 200": false
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Status code is 200": false
				}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "f1589285-ff1a-1c11-cf91-62482d3143e5",
			"name": "delete not existing user",
			"url": "http://localhost:5000/users/120",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "9cd2b516-589c-2a96-f980-0600cece5a6b",
			"name": "post not existing interest",
			"url": "http://localhost:5000/interests",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 200": false
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Status code is 200": false
				}
			],
			"time": 18,
			"totalRequestTime": 18,
			"iterationResults": {}
		},
		{
			"id": "a39105ba-2119-c4ab-2679-b1d849c16a0f",
			"name": "post existing interest",
			"url": "http://localhost:5000/interests",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 400": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Status code is 400": true
				}
			],
			"time": 15,
			"totalRequestTime": 15,
			"iterationResults": {}
		},
		{
			"id": "e56886f4-fb7f-46d5-ddc7-af516e790cfb",
			"name": "post interest bad request",
			"url": "http://localhost:5000/interests",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 400": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Status code is 400": true
				}
			],
			"time": 11,
			"totalRequestTime": 11,
			"iterationResults": {}
		},
		{
			"id": "6fc0fa3e-aa1d-4dc1-9e9d-695d209ce8ff",
			"name": "getting interests",
			"url": "http://localhost:5000/interests",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 13,
			"totalRequestTime": 13,
			"iterationResults": {}
		},
		{
			"id": "ca034683-4235-279c-2fcb-bad3b58f31cb",
			"name": "update photo existing user",
			"url": "http://localhost:5000/users/1/photo",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": 20,
			"totalRequestTime": 20,
			"iterationResults": {}
		},
		{
			"id": "48a27ced-4812-f5de-3809-d3e9531a98cd",
			"name": "update photo not existing user",
			"url": "http://localhost:5000/users/120/photo",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"tests": {
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Status code is 404": true
				}
			],
			"time": 12,
			"totalRequestTime": 12,
			"iterationResults": {}
		},
		{
			"id": "87a2aa43-9a38-70fd-7309-dab2150fd1f7",
			"name": "update photo bad request",
			"url": "http://localhost:5000/users/1/photo",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {
				"Status code is 400": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Status code is 400": true
				}
			],
			"time": 11,
			"totalRequestTime": 11,
			"iterationResults": {}
		}
	],
	"totalPass": 17,
	"totalFail": 2,
	"totalTime": 461,
	"lifecycle": "done",
	"requests": [
		{
			"name": "getting users",
			"id": "2838e53b-b805-3659-64db-bbe3dd6e3eba",
			"url": "http://localhost:5000/users",
			"time": 141,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "getting existing user",
			"id": "b0755d06-5510-e8b9-6af1-25e66f850c49",
			"url": "http://localhost:5000/users/1",
			"time": 21,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "getting not existing user",
			"id": "53d4fd33-7e83-8e9c-5dc4-18da3bf7ca8e",
			"url": "http://localhost:5000/users/100",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "post user ok",
			"id": "c59e8b94-27b2-b0a8-c395-741c46ed2fb4",
			"url": "http://localhost:5000/users",
			"time": 75,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "post user bad request",
			"id": "35300df5-1fe9-8323-b0ee-13481bf6cc21",
			"url": "http://localhost:5000/users",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 400"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 400": true
			}
		},
		{
			"name": "post user interest not found",
			"id": "b68a2ef1-e6a3-f0c9-81af-f912bc7c55e6",
			"url": "http://localhost:5000/users",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "update existing user",
			"id": "5183021c-4561-7e79-1e86-64aa2c94952d",
			"url": "http://localhost:5000/users/1",
			"time": 20,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "update existing user interest not found",
			"id": "7ba08531-0ea2-d593-9ea5-f5dd61bfa2f6",
			"url": "http://localhost:5000/users/1",
			"time": 25,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "update existing user bad request",
			"id": "d7d7a796-f882-a83f-11aa-672d8f318aaa",
			"url": "http://localhost:5000/users/1",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 400"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 400": true
			}
		},
		{
			"name": "update not existing user",
			"id": "58dae3c3-2e9c-857f-9206-204208b7dcec",
			"url": "http://localhost:5000/users/100",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "delete existing user",
			"id": "caf5ff48-8625-b055-b6fc-a6b48755389e",
			"url": "http://localhost:5000/users/11",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					false
				]
			],
			"tests": {
				"Status code is 200": false
			}
		},
		{
			"name": "delete not existing user",
			"id": "f1589285-ff1a-1c11-cf91-62482d3143e5",
			"url": "http://localhost:5000/users/120",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "post not existing interest",
			"id": "9cd2b516-589c-2a96-f980-0600cece5a6b",
			"url": "http://localhost:5000/interests",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					false
				]
			],
			"tests": {
				"Status code is 200": false
			}
		},
		{
			"name": "post existing interest",
			"id": "a39105ba-2119-c4ab-2679-b1d849c16a0f",
			"url": "http://localhost:5000/interests",
			"time": 15,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 400"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 400": true
			}
		},
		{
			"name": "post interest bad request",
			"id": "e56886f4-fb7f-46d5-ddc7-af516e790cfb",
			"url": "http://localhost:5000/interests",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 400"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 400": true
			}
		},
		{
			"name": "getting interests",
			"id": "6fc0fa3e-aa1d-4dc1-9e9d-695d209ce8ff",
			"url": "http://localhost:5000/interests",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "update photo existing user",
			"id": "ca034683-4235-279c-2fcb-bad3b58f31cb",
			"url": "http://localhost:5000/users/1/photo",
			"time": 20,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 200"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 200": true
			}
		},
		{
			"name": "update photo not existing user",
			"id": "48a27ced-4812-f5de-3809-d3e9531a98cd",
			"url": "http://localhost:5000/users/120/photo",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 404"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 404": true
			}
		},
		{
			"name": "update photo bad request",
			"id": "87a2aa43-9a38-70fd-7309-dab2150fd1f7",
			"url": "http://localhost:5000/users/1/photo",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Status code is 400"
			],
			"gridData": [
				[
					true
				]
			],
			"tests": {
				"Status code is 400": true
			}
		}
	],
	"synced": false
}